; PyCBC configuration for CBC searches on O1 data, C02 data!

[workflow]
; http://ligo-cbc.github.io/pycbc/releases/v1.2.0/html/workflow/initialization.html
h1-channel-name = H1:DCH-CLEAN_STRAIN_C02
l1-channel-name = L1:DCH-CLEAN_STRAIN_C02

[workflow-ifos]
h1 =
l1 =

[workflow-datafind]
; http://ligo-cbc.github.io/pycbc/releases/v1.2.0/html/workflow/datafind.html
datafind-h1-frame-type = H1_CLEANED_HOFT_C02
datafind-l1-frame-type = L1_CLEANED_HOFT_C02
datafind-check-segment-gaps = update_times
datafind-check-frames-exist = raise_error
find-check-segment-summary = no_test

[workflow-segments]
segments-database-url = https://segments.ligo.org
segments-veto-definer-url = https://git.ligo.org/detchar/veto-definitions/-/blob/master/cbc/O1/H1L1-CBC_VETO_DEFINER_C02_O1_1126051217-11203200.xml

; Use only if data has to be downloaded from LOSC (Change the strain inputs)
segments-science = +DATA,-CBC_CAT1_VETO
segments-vetoes = +CBC_CAT2_VETO,+CBC_HW_INJ,+BURST_HW_INJ


[datafind]
urltype = file
